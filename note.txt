#de tao django: django-admin startproject + ten project
# manage.py: dùng để tương tác command, tạo tk admin, tạo DB, tạo sver ảo
# __init__.py: biến forder thành packet
# asgi.py:
# settings.py: chỉnh sửa cấu hình project như: DB(chỉ support: sqllite, ,
#urls.py: tạo ra các đường dânx của mình để liên kết các page lại với nhau
# wsgi.py: để deploy project lên server
# chạy: python3 + manage.py + runserver + tên cổng muốn đổi(cố định là 8000)
--------------------------------------------------------------------------------
#tạo web app: python3 manage.py startapp + tên webapp
    # sau khi tạo thì vài file settings -> INSTALLED_APPS để thêm app vừa tạo -> 'tên app'
    # sau khi thêm thì cập nhật settings: python3 manage.py migrate
#client(may nguoi dung) ----HTTP request----> Web service server ----HTTP response ----> client(may nguoi dung)
#from django.test import TestCase, SimpleTestCase: SimpleTestCase: dung de test
# python3 manage.py test + name webapp: de test duong dan chay dung hay chua
#base laf khung
# tao home.html. dùng {% extends "pages/base.html" %} để liên kết base sang
#tạo 1 folder trong apphome tên là static. Download bostrap về và đưa folder css và js của bostrap vào folder static
# vào base setup để có thể sd bostrap bằng cách:
    # {% load staticfiles %}
    # <link rel ="stylesheet" href = "{% static(nơi lưu file bóotrap) 'css/bootstrap.min.css' %}" type = "text.css">
#phan body: <div class="container-fluid"></div>: làm căn chỉnh tạo ra khoảng đệm trong khoảng thẻ div.
# màn hình được chia làm 12 vùng
#class="response-img": dùng để khi thu nhỏ màn hình thì ảnh cũng sẽ được thu nhỏ
#python manage.py migrate : dùng để cập nhật cơ sở dữ liệu sqllite
# Tuong tac voi DB: python manage.py shell
    # from blog(nameapp).models import Post(def in models)
    #Phuong thuc khoi tao: a = Post() (def in models)
    #a.title = 'First Title'
    #a.body = 'Hello World'
    #save data: a.save()
    #Truy vn data: Post.objects.all()
    #Khoi tao: b = Post.(title = 'secondary Post', body = 'hello')
#He thong admin: python manage.py createsuperuser
    #quanly data: from .models import Post(def in model)
    #create class: class PostAdmin(admin.ModelAdmin):
#         list_display = ['title', 'date']
#         list_filter = ['date']
#         search_fields = ['title']
    #admin.site.register(Post, )

